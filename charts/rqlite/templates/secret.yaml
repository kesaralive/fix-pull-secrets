{{- $name := tpl (include "rqlite.fullname" .) $ -}}
{{/*
*/}}
{{- include "rqlite.generateSecrets" . }}
{{/*
List of additional generated system users which will be concatenated with the
user-suppplied list below
*/}}
{{ $internalUsers := list
     (dict "username" "_system_probes" "perms" (list "ready") 
      "password" (.Release.rqlite.probePassword))
     (dict "username" "_system_rqlite" "perms" (list "all") 
      "password" (.Release.rqlite.rqlitePassword))
}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels:
    {{- include "rqlite.labels" . | nindent 4 }}
type: Opaque
stringData:
  users.json: |-
    {{- if .Values.config.users }}
    {{- $users := concat $internalUsers .Values.config.users }}
    {{- tpl ($users | toPrettyJson) . | nindent 4}}
    {{- end }}

{{- include "rqlite.renderTLSFiles" (dict "value" "node" "context" $) | nindent 2 }}
{{- include "rqlite.renderTLSFiles" (dict "value" "client" "context" $) | nindent 2 }}
---
# Persist the generated passwords in the K8s cluster to ensure consistency if the chart is
# upgraded.
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}-internal
  labels:
    {{- include "rqlite.labels" . | nindent 4 }}
type: Opaque
data:
  probePassword: {{ .Release.rqlite.probePassword | b64enc | quote }}
  rqlitePassword: {{ .Release.rqlite.rqlitePassword | b64enc | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}-extra
  labels:
    {{- include "rqlite.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- with .Values.extraFiles }}
    {{- tpl (toYaml .) $ | nindent 2 }}
  {{- end }}
